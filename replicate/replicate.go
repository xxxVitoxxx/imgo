package replicate

import "time"

// Request for replicate APIs
type Request struct {
	Version string `json:"version"`
	Input   Input  `json:"input"`

	// an HTTPS URL for receiving a webhook
	Webhook string `json:"webhook"`

	// if not set, will send requests to your webhook URL whenever there are new logs, new outputs, or the prediction had finished
	// you can change which events trigger webhook requests by specifying EventFilter in the prediction request

	// start: immediately on prediction start
	// output: each time a prediction generates an output (note that predictions can generate multiple outputs)
	// logs: each time log output is generated by a prediction
	// completed: when the prediction reaches a terminal state (succeeded/canceled/failed)
	EventsFilter []string `json:"webhook_events_filter,omitempty"`
}

type createReplicate struct {
	getReplicate
	WebhookCompleted []string `json:"webhook_completed,omitempty"`
}

type getReplicate struct {
	ID          string      `json:"id"`
	Version     string      `json:"version"`
	Input       interface{} `json:"input,omitempty"`
	Output      string      `json:"output"`
	Logs        string      `json:"logs"`
	Err         string      `json:"error"`
	Status      Status      `json:"status"`
	CreatedAt   time.Time   `json:"created_at"`
	StartedAt   time.Time   `json:"started_at"`
	CompletedAt time.Time   `json:"completed_at"`
	Webhook     string      `json:"webhook"`
	URLs        URLs        `json:"urls"`
	Metrics     interface{} `json:"metrics"`
}

type URLs struct {
	Get    string `json:"get"`
	Cancel string `json:"cancel"`
}
